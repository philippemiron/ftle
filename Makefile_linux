# variables
COMPILATEUR_C := g++
FLAGS_C := -O3 -std=c++11 -fopenmp
FLAGS_AR := cru

HOME = .

# folders executable and sources
main := $(HOME)/main
src := $(HOME)/src

# objects
obj_main := $(patsubst %.cpp,%.o,$(wildcard $(main)/*.cpp))
obj_src := $(patsubst %.cpp,%.o,$(wildcard $(src)/*.cpp))

# include directories and external libraries
INCLUDE = -I./lib/tecio/tecsrc -I./lib -I./src -I./include

# required external library
LIBEXT =  ./lib/libtecio_linux.a

# standard library
LINK_LIBS = -lblas -llapack

# Define the target directories.
TARGETDIR=.

all: dns

dns: $(obj_src) $(obj_main)
	@echo "Building main:"
	$(COMPILATEUR_C) $(FLAGS_C) $(INCLUDE) -o $(main)/ftle.bin $(obj_main) $(obj_src) $(LIBEXT) $(LINK_LIBS)

# Compile all source files .cpp into .o files
$(TARGETDIR)/%.o: $(TARGETDIR)/%.cpp $(TARGETDIR)/%.h
	$(COMPILATEUR_C) $(FLAGS_C) $(INCLUDE) -c $< -o $@
  
# Compile all source files .cpp into .o files
$(TARGETDIR)/%.o: $(TARGETDIR)/%.cpp
	$(COMPILATEUR_C) $(FLAGS_C) $(INCLUDE) -c $< -o $@

# Compile all source files .f into .o files
$(TARGETDIR)/%.o: $(TARGETDIR)/%.f $(TARGETDIR)/%.h
	$(COMPILATEUR_F) $(FLAGS_F) $(INCLUDE) -c $< -o $@

clean:
	cd $(main); rm -f *.o *.bin;
	cd $(src); rm -f *.o *.a;
